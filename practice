#!/usr/bin/env bash

# bash will exist whenever it encounters a failure
set -e

# I am not sure what this does, but the '-n' means "not null"
# and the 'set -x' has something to do with the error traceback.
[-n "$JOB_SEARCH_DEBUG"] && set -x

# Initializes the project root path
if [-z "$JOB_SEARCH_ROOT"]; then
    JOB_SEARCH_ROOT=${HOME}/.job-search
fi

# Not exactly sure what I am doing here, but
# I am pretty sure that it is setting the shell
# variable equal to whatever was passed in from
# original call at position 1
shell="$1"

# If there is not shell, then I need to try to
# deduce which shell the user is usig.
# I do not like how pyenv did this, so I need
# to figure this out...
if [-z "$shell"]; then
    echo 'I am not sure how to do this yet'
fi

# Colorize function is used to display warnings.
# I do not like the way pyenv when about creating this.
# I need to figure out another way to do it...
colorize(){
    echo 'Colorize function is not ready yet.'
}

# Checkout function is used to clone items
# from github
checkout(){
    [-d "$2"] || git clone "$1" "$2"
}

# Checks to see if the git commands exists
if ! command -v git 1>/dev/null 2>&1; then
    echo "job-search: Git is not installed, Can't continue." &>2
    exit 1
fi




